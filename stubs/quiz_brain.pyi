from typing import ClassVar, Literal

from trivia_game.base_types import AppControllerProtocol
from trivia_game.models import Question, ScoreboardEntry
from trivia_game.trivia_api import TriviaAPIClient

class QuizBrain:
    controller: AppControllerProtocol
    api_client: TriviaAPIClient
    categories: dict[str, str]
    current_question: Question | None
    questions: list[Question]
    score: int
    TYPE_MAPPING: ClassVar[dict[str, str | None]]
    DIFFICULTY_MULTIPLIER: ClassVar[dict[str, int]]

    def __init__(self, controller: AppControllerProtocol) -> None: ...
    def _load_categories(self) -> None: ...
    def get_available_categories(self) -> list[str]: ...
    def get_category_id(self, category_name: str) -> str | None: ...
    def get_available_difficulties(self) -> list[str]: ...
    def get_difficulty_value(self, difficulty_name: str) -> Literal["easy", "medium", "hard"] | None: ...
    def get_available_question_types(self) -> list[str]: ...
    def get_question_type_value(self, question_type: str) -> str | None: ...
    def load_questions(
        self,
        category: str | None,
        difficulty: Literal["easy", "medium", "hard"] | None,
        question_type: Literal["multiple", "boolean"] | None,
    ) -> None: ...
    def show_next_question(self) -> None: ...
    def check_answer(self, selected_answer: str) -> bool: ...
    def _calculate_score(self, difficulty: str) -> int: ...
    def end_game(self) -> None: ...
    def save_score(self, player_name: str) -> None: ...
    def _save_to_json(self, entry: ScoreboardEntry) -> None: ...
